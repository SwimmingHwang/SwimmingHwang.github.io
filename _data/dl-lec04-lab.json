{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<blockquote>Lab 4 Multi-variable linear regression</blockquote>   \n",
    "\n",
    "**여러 개의 변수**에 대해 **y**를 예측하는 회귀 분석"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dimension \n",
    "[5, 3] X [3, 1] = [5, 1]   \n",
    "- 데이터의 갯수는 n개   해당 코드에서는 n = 5\n",
    "- 3개의 input을 사용한다. 즉, 독립 변수가 3개이다. \n",
    "\n",
    "### H(X) = XW\n",
    "- H(x1, x2, x3) = w1x1 + w2x2 + w3x3 + b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_data = [[73., 80., 75.],\n",
    "          [93., 88., 93.],\n",
    "          [89., 91., 90.],\n",
    "          [96., 98., 100.],\n",
    "          [73., 66., 70.]]\n",
    "y_data = [[152.],\n",
    "          [185.],\n",
    "          [180.],\n",
    "          [196.],\n",
    "          [142.]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 모델 생성"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "tf.model = tf.keras.Sequential()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- `multi-variable`이므로 `input_dim`을 3으로 설정한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# input_dim=3 gives multi-variable regression\n",
    "\n",
    "tf.model.add(tf.keras.layers.Dense(units=1, input_dim=3))  \n",
    "# this line can be omitted, as linear activation is default\n",
    "\n",
    "tf.model.add(tf.keras.layers.Activation('linear'))  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 학습 과정 세팅 `complie()`\n",
    "- learing rate 1e-5 로 세팅\n",
    "- loss functin `mse`로 세팅\n",
    "- 학습"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense (Dense)                (None, 1)                 4         \n",
      "_________________________________________________________________\n",
      "activation (Activation)      (None, 1)                 0         \n",
      "=================================================================\n",
      "Total params: 4\n",
      "Trainable params: 4\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "Train on 5 samples\n",
      "Epoch 1/100\n",
      "5/5 [==============================] - 1s 115ms/sample - loss: 15334.0859\n",
      "Epoch 2/100\n",
      "5/5 [==============================] - 0s 4ms/sample - loss: 4816.5117\n",
      "Epoch 3/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 1519.8070\n",
      "Epoch 4/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 486.4603\n",
      "Epoch 5/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 162.5555\n",
      "Epoch 6/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 61.0239\n",
      "Epoch 7/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 29.1942\n",
      "Epoch 8/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 19.2124\n",
      "Epoch 9/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 16.0789\n",
      "Epoch 10/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 15.0918\n",
      "Epoch 11/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.7775\n",
      "Epoch 12/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.6742\n",
      "Epoch 13/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.6369\n",
      "Epoch 14/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.6205\n",
      "Epoch 15/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.6105\n",
      "Epoch 16/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.6025\n",
      "Epoch 17/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5951\n",
      "Epoch 18/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5880\n",
      "Epoch 19/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5809\n",
      "Epoch 20/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5739\n",
      "Epoch 21/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5669\n",
      "Epoch 22/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5599\n",
      "Epoch 23/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5528\n",
      "Epoch 24/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5458\n",
      "Epoch 25/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5389\n",
      "Epoch 26/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5318\n",
      "Epoch 27/100\n",
      "5/5 [==============================] - 0s 4ms/sample - loss: 14.5248\n",
      "Epoch 28/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.5178\n",
      "Epoch 29/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.5108\n",
      "Epoch 30/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.5038\n",
      "Epoch 31/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.4969\n",
      "Epoch 32/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.4899\n",
      "Epoch 33/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.4829\n",
      "Epoch 34/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.4759\n",
      "Epoch 35/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.4689\n",
      "Epoch 36/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.4620\n",
      "Epoch 37/100\n",
      "5/5 [==============================] - 0s 4ms/sample - loss: 14.4550\n",
      "Epoch 38/100\n",
      "5/5 [==============================] - 0s 4ms/sample - loss: 14.4480\n",
      "Epoch 39/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.4411\n",
      "Epoch 40/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.4342\n",
      "Epoch 41/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.4272\n",
      "Epoch 42/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.4203\n",
      "Epoch 43/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.4133\n",
      "Epoch 44/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.4064\n",
      "Epoch 45/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.3995\n",
      "Epoch 46/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3925\n",
      "Epoch 47/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3856\n",
      "Epoch 48/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3787\n",
      "Epoch 49/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3717\n",
      "Epoch 50/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3648\n",
      "Epoch 51/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.3579\n",
      "Epoch 52/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3510\n",
      "Epoch 53/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3441\n",
      "Epoch 54/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3372\n",
      "Epoch 55/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3303\n",
      "Epoch 56/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3234\n",
      "Epoch 57/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3165\n",
      "Epoch 58/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.3096\n",
      "Epoch 59/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.3028\n",
      "Epoch 60/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.2958\n",
      "Epoch 61/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2890\n",
      "Epoch 62/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2822\n",
      "Epoch 63/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2753\n",
      "Epoch 64/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2684\n",
      "Epoch 65/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2616\n",
      "Epoch 66/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.2547\n",
      "Epoch 67/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2478\n",
      "Epoch 68/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2410\n",
      "Epoch 69/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2341\n",
      "Epoch 70/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2273\n",
      "Epoch 71/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2205\n",
      "Epoch 72/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2136\n",
      "Epoch 73/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2068\n",
      "Epoch 74/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.2000\n",
      "Epoch 75/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.1931\n",
      "Epoch 76/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1863\n",
      "Epoch 77/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1795\n",
      "Epoch 78/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1727\n",
      "Epoch 79/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1659\n",
      "Epoch 80/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1591\n",
      "Epoch 81/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1523\n",
      "Epoch 82/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1455\n",
      "Epoch 83/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.1387\n",
      "Epoch 84/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1319\n",
      "Epoch 85/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1251\n",
      "Epoch 86/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1184\n",
      "Epoch 87/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1116\n",
      "Epoch 88/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.1048\n",
      "Epoch 89/100\n",
      "5/5 [==============================] - 0s 4ms/sample - loss: 14.0980\n",
      "Epoch 90/100\n",
      "5/5 [==============================] - 0s 5ms/sample - loss: 14.0912\n",
      "Epoch 91/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.0845\n",
      "Epoch 92/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.0777\n",
      "Epoch 93/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.0709\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 94/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.0642\n",
      "Epoch 95/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.0575\n",
      "Epoch 96/100\n",
      "5/5 [==============================] - 0s 2ms/sample - loss: 14.0507\n",
      "Epoch 97/100\n",
      "5/5 [==============================] - 0s 19ms/sample - loss: 14.0439\n",
      "Epoch 98/100\n",
      "5/5 [==============================] - 0s 8ms/sample - loss: 14.0372\n",
      "Epoch 99/100\n",
      "5/5 [==============================] - 0s 3ms/sample - loss: 14.0305\n",
      "Epoch 100/100\n",
      "5/5 [==============================] - 0s 4ms/sample - loss: 14.0237\n"
     ]
    }
   ],
   "source": [
    "tf.model.compile(loss='mse', optimizer=tf.keras.optimizers.SGD(lr=1e-5))\n",
    "tf.model.summary()\n",
    "history = tf.model.fit(x_data, y_data, epochs=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[185.96516]]\n"
     ]
    }
   ],
   "source": [
    "y_predict = tf.model.predict(np.array([[72., 93., 90.]]))\n",
    "print(y_predict)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "tf",
   "language": "python",
   "name": "tf"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
